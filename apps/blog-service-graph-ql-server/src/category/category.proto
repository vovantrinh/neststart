syntax = "proto3";

                 package category;
service CategoryService {
 rpc createCategory (CategoryCreateInput) returns (Category) {}
rpc categories (findManyParams) returns (stream Category) {}
rpc category (CategoryWhereUniqueInput) returns (Category) {}
rpc updateCategory (CategoryUpdateInput) returns (Category) {}
rpc deleteCategory (CategoryWhereUniqueInput) returns (Category) {}
rpc findManyCategory (CategoryWhereUniqueInput) returns (stream Post) {}
rpc updateCategory (PostParams) returns (stream Post) {}
rpc connectCategory (PostParams) returns (Post) {}
rpc disconnectCategory (PostParams) returns (Post) {} 
 }
message CategoryCreateInput {
string createdAt = 1;
string description = 2;
string id = 3;
string name = 4;
repeated Post posts = 5;
string updatedAt = 6;
};
message Category {
string createdAt = 1;
string description = 2;
string id = 3;
string name = 4;
repeated Post posts = 5;
string updatedAt = 6;
};
message CategoryWhereUniqueInput {
string createdAt = 1;
string description = 2;
string id = 3;
string name = 4;
repeated Post posts = 5;
string updatedAt = 6;
};
message CategoryUpdateInput {
string createdAt = 1;
string description = 2;
string id = 3;
string name = 4;
repeated Post posts = 5;
string updatedAt = 6;
};
message findManyParams {

};
message Post {
string content = 1;
string createdAt = 2;
string id = 3;
bool published = 4;
string title = 5;
string updatedAt = 6;
};
message PostWhereUniqueInput {
string content = 1;
string createdAt = 2;
string id = 3;
bool published = 4;
string title = 5;
string updatedAt = 6;
};
message PostParams {
CategoryWhereUniqueInput categoryWhereUniqueInput = 1;
PostWhereUniqueInput postWhereUniqueInput = 2;
};